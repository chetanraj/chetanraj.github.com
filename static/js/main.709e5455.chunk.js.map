{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","className","target","rel","href","data-v-19cd8ce6","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x","y","rx","ry","d","x1","y1","x2","y2","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wOA8IeA,MA5If,WACE,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,YACf,yBAAKA,UAAU,oCACb,yBAAKA,UAAU,YAAf,cACA,yBAAKA,UAAU,aACb,uBACEA,UAAU,iBACVC,OAAO,SACPC,IAAI,sBACJC,KAAK,6BAJP,UAUJ,yBAAKH,UAAU,OACf,yBAAKA,UAAU,+CACb,yBAAKA,UAAU,gCAAf,wBACA,yBAAKA,UAAU,qBAAf,gCACgC,IAC9B,uBACEC,OAAO,SACPC,IAAI,sBACJC,KAAK,kDACLH,UAAU,aAJZ,qBAFF,IAUG,6BAVH,6CAYA,yBAAKA,UAAU,2CAAf,oCACoC,IAClC,uBAAGG,KAAK,sBAAR,eAGJ,yBAAKH,UAAU,oCACb,yBAAKA,UAAU,6BACb,uBAAGG,KAAK,kCAAR,4BAEF,yBAAKH,UAAU,wBACb,uBACEC,OAAO,SACPC,IAAI,sBACJF,UAAU,sBACVG,KAAK,0CAEL,yBACEC,kBAAgB,GAChBC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,QACfb,UAAU,6BAEV,0BACEI,kBAAgB,GAChBU,EAAE,IACFC,EAAE,IACFT,MAAM,KACNC,OAAO,KACPS,GAAG,IACHC,GAAG,MAEL,0BACEb,kBAAgB,GAChBc,EAAE,oDAEJ,0BACEd,kBAAgB,GAChBe,GAAG,OACHC,GAAG,MACHC,GAAG,OACHC,GAAG,UAIT,uBACErB,OAAO,SACPC,IAAI,sBACJF,UAAU,sBACVG,KAAK,kCAEL,yBACEC,kBAAgB,GAChBC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,QACfb,UAAU,2BAEV,0BACEI,kBAAgB,GAChBc,EAAE,kLAIR,uBACEjB,OAAO,SACPC,IAAI,sBACJF,UAAU,sBACVG,KAAK,gCAEL,yBACEC,kBAAgB,GAChBC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,QACfb,UAAU,0BAEV,0BACEI,kBAAgB,GAChBc,EAAE,+SCvHEK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.709e5455.chunk.js","sourcesContent":["import React from 'react';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"p-5 pb-0\">\n      <div className=\"header flex h-16 justify-between\">\n        <div className=\"text-2xl\">Chetan Raj</div>\n        <div className=\"flex px-6\">\n          <a\n            className=\"uppercase pt-1\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://chetanraj.in/blog\"\n          >\n            Blog\n          </a>\n        </div>\n      </div>\n      <div className=\"bg\"></div>\n      <div className=\"container flex flex-col justify-center h-80\">\n        <div className=\"tagline text-base opacity-50\">DESIGNER & DEVELOPER</div>\n        <div className=\"heroline text-2xl\">\n          Web Designer & Web Developer,{\" \"}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.instagram.com/javascriptessentials/\"\n            className=\"underline\"\n          >\n            Tech Instagrammer\n          </a>\n          ,<br /> Music, Movies, Gadgets, Iron Man, Batman\n        </div>\n        <div className=\"tagline text-base opacity-50 font-light\">\n          Currently Senior Web Developer at{\" \"}\n          <a href=\"https://active.ai/\">Active.ai</a>\n        </div>\n      </div>\n      <div className=\"footer flex h-16 justify-between\">\n        <div className=\"text-base opacity-50 pt-1\">\n          <a href=\"mailto:chetan.narian@gmail.com\">chetan.narian@gmail.com</a>\n        </div>\n        <div className=\"flex px-6 opacity-50\">\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"uppercase pl-3 pr-3\"\n            href=\"https://www.instagram.com/thecjstream/\"\n          >\n            <svg\n              data-v-19cd8ce6=\"\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"feather feather-instagram\"\n            >\n              <rect\n                data-v-19cd8ce6=\"\"\n                x=\"2\"\n                y=\"2\"\n                width=\"20\"\n                height=\"20\"\n                rx=\"5\"\n                ry=\"5\"\n              ></rect>\n              <path\n                data-v-19cd8ce6=\"\"\n                d=\"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z\"\n              ></path>\n              <line\n                data-v-19cd8ce6=\"\"\n                x1=\"17.5\"\n                y1=\"6.5\"\n                x2=\"17.5\"\n                y2=\"6.5\"\n              ></line>\n            </svg>\n          </a>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"uppercase pl-3 pr-3\"\n            href=\"https://twitter.com/chetan_raj\"\n          >\n            <svg\n              data-v-19cd8ce6=\"\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"feather feather-twitter\"\n            >\n              <path\n                data-v-19cd8ce6=\"\"\n                d=\"M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z\"\n              ></path>\n            </svg>\n          </a>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"uppercase pl-3 pr-3\"\n            href=\"https://github.com/chetanraj\"\n          >\n            <svg\n              data-v-19cd8ce6=\"\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"feather feather-github\"\n            >\n              <path\n                data-v-19cd8ce6=\"\"\n                d=\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"\n              ></path>\n            </svg>\n          </a>\n        </div>\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/tailwind.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}